// <auto-generated />
using System;
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataBase.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20210531203457_updateOrderModel")]
    partial class updateOrderModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataBase.DBModels.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FirsName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            FirsName = "Jorik",
                            LastName = "Vartatov"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            FirsName = "Pupa",
                            LastName = "Lupa"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            FirsName = "Donald",
                            LastName = "Trump"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            FirsName = "Hot",
                            LastName = "Dog"
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 2,
                            FirsName = "John",
                            LastName = "Wick"
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 2,
                            FirsName = "Justin",
                            LastName = "Bieber"
                        });
                });

            modelBuilder.Entity("DataBase.DBModels.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Microsoft"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Apple"
                        });
                });

            modelBuilder.Entity("DataBase.DBModels.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FirsName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Position")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Salary")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            FirsName = "Vasiliy",
                            LastName = "Pupkin",
                            Position = "junior C#",
                            Salary = 45000
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            FirsName = "Alex",
                            LastName = "Chpokin",
                            Position = "junior java",
                            Salary = 47000
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            FirsName = "Geralt",
                            LastName = "Vedmak",
                            Position = "Middle C#",
                            Salary = 130000
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 1,
                            FirsName = "Artemi",
                            LastName = "Lebedev",
                            Position = "Designer",
                            Salary = 250000
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 1,
                            FirsName = "Ulrikh",
                            LastName = "Petrel",
                            Position = "Senior java",
                            Salary = 310000
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 1,
                            FirsName = "Vladimir",
                            LastName = "Putin",
                            Position = "President",
                            Salary = 666666
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 2,
                            FirsName = "Peter",
                            LastName = "Parker",
                            Position = "Photographer",
                            Salary = 76000
                        },
                        new
                        {
                            Id = 8,
                            CompanyId = 2,
                            FirsName = "Bruce",
                            LastName = "Wayne",
                            Position = "Brand manager",
                            Salary = 640000
                        },
                        new
                        {
                            Id = 9,
                            CompanyId = 2,
                            FirsName = "Clark",
                            LastName = "Kent",
                            Position = "Superman",
                            Salary = 17500
                        },
                        new
                        {
                            Id = 10,
                            CompanyId = 2,
                            FirsName = "Tony",
                            LastName = "Stark",
                            Position = "Team Lead",
                            Salary = 666665
                        },
                        new
                        {
                            Id = 11,
                            CompanyId = 2,
                            FirsName = "John",
                            LastName = "Connor",
                            Position = "Machine Learning Engineer",
                            Salary = 284600
                        },
                        new
                        {
                            Id = 12,
                            CompanyId = 2,
                            FirsName = "Vladimir",
                            LastName = "Zelensky",
                            Position = "President",
                            Salary = 666666
                        });
                });

            modelBuilder.Entity("DataBase.DBModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ClientrId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Sum")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DataBase.DBModels.Client", b =>
                {
                    b.HasOne("DataBase.DBModels.Company", "Company")
                        .WithMany("Clients")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DataBase.DBModels.Employee", b =>
                {
                    b.HasOne("DataBase.DBModels.Company", "Company")
                        .WithMany("Employers")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DataBase.DBModels.Order", b =>
                {
                    b.HasOne("DataBase.DBModels.Client", null)
                        .WithMany("Orders")
                        .HasForeignKey("ClientId");

                    b.HasOne("DataBase.DBModels.Employee", null)
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataBase.DBModels.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DataBase.DBModels.Company", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Employers");
                });

            modelBuilder.Entity("DataBase.DBModels.Employee", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
